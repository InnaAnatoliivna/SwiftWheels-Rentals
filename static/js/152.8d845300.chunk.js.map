{"version":3,"file":"static/js/152.8d845300.chunk.js","mappings":"mOAEO,MAAMA,E,OAAUC,GAAOC,IAAGC,IAAAA,GAAAC,EAAAA,EAAAA,GAAA,4Z,sBCmBjC,MA4EA,EA5EsBC,KAClB,MAAMC,GAAWC,EAAAA,EAAAA,MACXC,EAAkBC,KAAKC,OAAMC,EAAAA,EAAAA,IAAYC,EAAAA,KACzCC,GAAcF,EAAAA,EAAAA,IAAYG,EAAAA,KACzBC,EAAYC,IAAcC,EAAAA,EAAAA,UAAS,IA4BpCC,GAAaC,EAAAA,EAAAA,cAAYC,UAC3B,IACI,MAAMC,QAAaC,EAAAA,EAAAA,GAAWC,GAC9BP,GAAYQ,GACHA,EAAKC,MAAMC,GAASA,EAAKH,KAAOF,EAAKE,KAGnCC,EAFI,IAAIA,EAAMH,IAI7B,CAAE,MAAOM,GACLC,QAAQD,MAAMA,EAAME,QACxB,IACD,IAiBH,OAfAC,EAAAA,EAAAA,YAAU,KACYV,WACd,MAAMW,QAAiBC,QAAQC,IAC3BzB,EAAgB0B,KAAKC,GACCtB,EAAYuB,MAAMV,GAASA,EAAKH,KAAOY,KACrCjB,EAAWiB,MAGvCnB,EAAWe,EAASM,OAAOC,SAAS,EAGxCC,EAAW,GACZ,CAAC1B,EAAaK,EAAYV,KAIzBgC,EAAAA,EAAAA,KAACC,EAAAA,EAAS,CAAAC,SACLlC,EAAgBmC,OAAS,GACpBH,EAAAA,EAAAA,KAACI,EAAAA,EAAW,CAACC,QAAS9B,KACrB+B,EAAAA,EAAAA,MAAC9C,EAAO,CAAA0C,SAAA,EACPF,EAAAA,EAAAA,KAAA,KAAAE,SAAG,uCACHF,EAAAA,EAAAA,KAACO,EAAAA,EAAM,CAACC,QAASA,IAAM1C,EAAS,YAAYoC,SAAC,4BAK7C,C","sources":["pages/FavoritesPage/FavoritesPage.styled.jsx","pages/FavoritesPage/FavoritesPage.jsx"],"sourcesContent":["import styled from \"styled-components\";\n\nexport const Wrapper = styled.div`\n    height: 100vh;\n\n    /* padding: 200px 0; */\n    display: flex;\n    flex-direction: column;\n    justify-content: center;\n    align-items: center;\n    gap: 28px;\n     p {\n        color: var(--color-text);\n        width: 100%;\n        font-size: 40px;\n        font-weight: 700;\n        line-height: 1.2; /* 111.429% */\n        letter-spacing: 0.7px;\n        text-align: center;\n    }\n`","import React, {\n    useCallback,\n    useEffect,\n    // useMemo,\n    useState\n} from 'react'\nimport Container from '../../components/Container/Container'\n// import Loading from '../../components/Loading/Loading'\nimport { useSelector } from 'react-redux'\nimport {\n    selectAdverts,\n    // selectFavorities,\n    selectFavoritiesID\n} from '../../redux/selectors'\nimport AdvertsList from '../../components/AdvertsList/AdvertsList'\n// import LoadMoreButton from '../../components/LoadMore/LoadMore'\nimport { getCarById } from '../../redux/operations'\nimport Button from '../../components/Button/Button'\nimport { Wrapper } from './FavoritesPage.styled'\nimport { useNavigate } from 'react-router-dom'\n\nconst FavoritesPage = () => {\n    const navigate = useNavigate();\n    const getFavoritiesId = JSON.parse(useSelector(selectFavoritiesID));\n    const dataAdverts = useSelector(selectAdverts);\n    const [getAdverts, setAdverts] = useState([]);\n\n    // useEffect(() => {\n    //     const getCarData = async (id) => {\n    //         try {\n    //             const data = await getCarById(id);\n    //             setAdverts((prev) => {\n    //                 if (prev !== data) {\n    //                     return [...prev, ...data];\n    //                 }\n    //                 return prev;\n    //             });\n    //         } catch (error) {\n    //             console.error(error.message);\n    //         }\n    //     };\n    //     const carItems = getFavoritiesId.reduce((acc, element) => {\n    //         const foundItem = dataAdverts.filter((item) => item.id === element)[0];\n    //         if (foundItem) {\n    //             acc.push(foundItem);\n    //         } else {\n    //             getCarData(element);\n    //         }\n    //         return acc;\n    //     }, []);\n    //     setAdverts(carItems);\n    // }, []);\n\n    const getCarData = useCallback(async (id) => {\n        try {\n            const data = await getCarById(id);\n            setAdverts((prev) => {\n                if (!prev.some((item) => item.id === data.id)) {\n                    return [...prev, data];\n                }\n                return prev;\n            });\n        } catch (error) {\n            console.error(error.message);\n        }\n    }, []);\n\n    useEffect(() => {\n        const fetchData = async () => {\n            const carItems = await Promise.all(\n                getFavoritiesId.map((element) => {\n                    const foundItem = dataAdverts.find((item) => item.id === element);\n                    return foundItem || getCarData(element);\n                })\n            );\n            setAdverts(carItems.filter(Boolean));\n        };\n\n        fetchData();\n    }, [dataAdverts, getCarData, getFavoritiesId]);\n\n\n    return (\n        <Container>\n            {getFavoritiesId.length > 0\n                ? <AdvertsList adverts={getAdverts} />\n                : (<Wrapper>\n                    <p>Unfortunately, the list is empty.</p>\n                    <Button onClick={() => navigate('/catalog')}>Back to the catalog</Button>\n                </Wrapper>)}\n            {/* <LoadMoreButton\n            // onLoadMore={onLoadMore} \n            /> */}\n        </Container>\n    )\n}\n\nexport default FavoritesPage"],"names":["Wrapper","styled","div","_templateObject","_taggedTemplateLiteral","FavoritesPage","navigate","useNavigate","getFavoritiesId","JSON","parse","useSelector","selectFavoritiesID","dataAdverts","selectAdverts","getAdverts","setAdverts","useState","getCarData","useCallback","async","data","getCarById","id","prev","some","item","error","console","message","useEffect","carItems","Promise","all","map","element","find","filter","Boolean","fetchData","_jsx","Container","children","length","AdvertsList","adverts","_jsxs","Button","onClick"],"sourceRoot":""}